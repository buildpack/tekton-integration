apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: buildpacks
spec:
  workspaces:
    - name: source-ws
      description: Location where source is stored.
    - name: cache-ws
      description: Location where cache is stored if CACHE_IMAGE is not provided.
      optional: true
  resources:
    - name: source-git
      type: git
    - name: app-image
      type: image
  params:
    - name: BUILDER_IMAGE
      description: The image on which builds will run (must include lifecycle and compatible buildpacks).
    - name: TRUST_BUILDER
      description: Whether the builder image is trusted. When false, each build phase is executed in isolation and credentials are only shared with trusted images.
      default: "false"
    - name: SOURCE_SUBPATH
      description: A subpath within the `source` where the source to build is located.
      default: ""
    - name: PROCESS_TYPE
      description: The default process type to set on the image.
      default: "web"
    - name: RUN_IMAGE
      description: Reference to a run image to use.
      default: ""
    # NOTE: CACHE_IMAGE isn't a resource because of issues with optional resource replacements
    - name: CACHE_IMAGE
      description: The name of the persistent app cache image.
      default: ""
    - name: USER_ID
      description: The user ID of the builder image user.
      default: "1000"
    - name: GROUP_ID
      description: The group ID of the builder image user.
      default: "1000"
  tasks:
    - name: copy-source-to-source-ws
      taskSpec:
        workspaces:
          - name: workspace
        resources:
          inputs:
            - name: source-git
              type: git
        steps:
          - name: clone-app-repo-to-workspace
            image: docker.io/library/bash:5.1.4@sha256:b208215a4655538be652b2769d82e576bc4d0a2bb132144c060efc5be8c3f5d6
            script: |
              #!/usr/bin/env bash
              set -e
              
              echo "> Installing rsync..."
              apk add rsync

              echo "> Syncing source to workspace..."
              rsync -avr --delete $(resources.inputs.source-git.path)/. $(workspaces.workspace.path)

              echo "> Done!"
      workspaces:
        - name: workspace
          workspace: source-ws
      resources:
        inputs:
          - name: source-git
            resource: source-git
    - name: build-trusted
      runAfter:
        - copy-source-to-source-ws
      taskRef:
        name: buildpacks
      when:
        - input: "$(params.TRUST_BUILDER)"
          operator: in
          values: [ "true", "yes", "TRUE", "True" ]
      workspaces:
        - name: source
          workspace: source-ws
        - name: cache
          workspace: cache-ws
      resources:
        outputs:
          - name: app-image
            resource: app-image
      params:
        - name: BUILDER_IMAGE
          value: "$(params.BUILDER_IMAGE)"
        - name: SOURCE_SUBPATH
          value: "$(params.SOURCE_SUBPATH)"
        - name: PROCESS_TYPE
          value: "$(params.PROCESS_TYPE)"
        - name: RUN_IMAGE
          value: "$(params.RUN_IMAGE)"
        - name: CACHE_IMAGE
          value: "$(params.CACHE_IMAGE)"
        - name: USER_ID
          value: "$(params.USER_ID)"
        - name: GROUP_ID
          value: "$(params.GROUP_ID)"
    - name: build-untrusted
      runAfter:
        - copy-source-to-source-ws
      taskRef:
        name: buildpacks-phases
      when:
        - input: "$(params.TRUST_BUILDER)"
          operator: notin
          values: [ "true", "yes", "TRUE", "True" ]
      workspaces:
        - name: source
          workspace: source-ws
        - name: cache
          workspace: cache-ws
      resources:
        outputs:
          - name: app-image
            resource: app-image
      params:
        - name: BUILDER_IMAGE
          value: "$(params.BUILDER_IMAGE)"
        - name: SOURCE_SUBPATH
          value: "$(params.SOURCE_SUBPATH)"
        - name: PROCESS_TYPE
          value: "$(params.PROCESS_TYPE)"
        - name: RUN_IMAGE
          value: "$(params.RUN_IMAGE)"
        - name: CACHE_IMAGE
          value: "$(params.CACHE_IMAGE)"
        - name: USER_ID
          value: "$(params.USER_ID)"
        - name: GROUP_ID
          value: "$(params.GROUP_ID)"
---
